snippet us "use strict" b
"use strict"`!v GetSnippetPref("semicolon")`
endsnippet

snippet fn "arrow function" w
(${1}) => {
	${VISUAL}$0
}
endsnippet

snippet fnn "old school function" w
function ${1:function_name}(${2:argument}) {
	${VISUAL}$0
}
endsnippet

snippet cl "console.log" w
console.log(${1:`!v GetSnippetPref("quote")`${2:value}`!v GetSnippetPref("quote")`})`!v GetSnippetPref("semicolon")`
endsnippet

snippet cle "console.error" w
console.error(${1:`!v GetSnippetPref("quote")`${2:value}`!v GetSnippetPref("quote")`})`!v GetSnippetPref("semicolon")`
endsnippet

snippet clw "console.warn" w
console.warn(${1:`!v GetSnippetPref("quote")`${2:value}`!v GetSnippetPref("quote")`})`!v GetSnippetPref("semicolon")`
endsnippet

snippet rq "require" b
const ${1} = require(`!v GetSnippetPref("quote")`$1`!v GetSnippetPref("quote")`)`!v GetSnippetPref("semicolon")`
endsnippet

snippet ip "import" b
import ${1} from `!v GetSnippetPref("quote")`${2}`!v GetSnippetPref("quote")``!v GetSnippetPref("semicolon")`
endsnippet

snippet iife "IIFE" b
(function() {
	$0
}())`!v GetSnippetPref("semicolon")`
endsnippet

snippet /** "JSDOC" b
/**
 * $0
 */
endsnippet

###
### Unit Test
###

snippet bef "before each" b
beforeEach(() => {
	$0
})`!v GetSnippetPref("semicolon")`
endsnippet

snippet desc "Describe (js)" b
describe('${1:description}', () => {
	$0
})`!v GetSnippetPref("semicolon")`
endsnippet

snippet it "it (js)" b
it('${1:description}', () => {
	$0
})`!v GetSnippetPref("semicolon")`
endsnippet

snippet ex "expect (js)" b
expect(${1:target})$0`!v GetSnippetPref("semicolon")`
endsnippet

snippet ee "expect to equal (js)" b
expect(${1:target}).toEqual(${2:value})`!v GetSnippetPref("semicolon")`
endsnippet

snippet ec "expect to have been called" b
expect(${1:target}).toHaveBeenCalled()`!v GetSnippetPref("semicolon")`
endsnippet

snippet ecw "expect to have been called with" b
expect(${1:target}).toHaveBeenCalledWith(${2:arguments})`!v GetSnippetPref("semicolon")`
endsnippet
