
# Better prefix
set -g prefix C-Space
unbind C-b

# For smart pane switchin with Vim, see bindings
set -g set-titles on

# Enable all the mouse support
setw -g mouse on
bind -n WheelUpPane   if -Ft= "#{mouse_any_flag}" "selectp -t=; send -M" "if -Ft= '#{alternate_on}' 'selectp -t=; send up'   'if -Ft= \"#{pane_in_mode}\" \"send -M\" \"selectp -t=; copy-mode -e; send -M\"'"
bind -n WheelDownPane if -Ft= "#{mouse_any_flag}" "selectp -t=; send -M" "if -Ft= '#{alternate_on}' 'selectp -t=; send Down' 'selectp -t=; send -M'"
bind -T copy-mode-vi C-WheelUpPane   send -X halfpage-up
bind -T copy-mode-vi C-WheelDownPane send -X halfpage-down
unbind -T copy-mode-vi  MouseDragEnd1Pane
bind -n DoubleClick1Pane select-pane \; copy-mode -M \; send-keys -X select-word

# Mouse wheel scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Things work better with this
setw -g xterm-keys on

# Better for Vim
set -sg escape-time 1

# Better indexing
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# Everyone's doing it...
setw -g aggressive-resize on

# Show running command in window tab
setw -g automatic-rename on

# Do it right
set -g default-terminal screen-256color

# More to scroll back to
set -g history-limit 10000

set -g display-time 5000
set -g display-panes-time 5000

# Prevent C-d killing tmux
set-environment -g 'IGNOREEOF' 2

# Vim-style keys for copy-mode
set -g mode-keys vi

# Support copy/paste on Mac OS X
set -g default-command "which reattach-to-user-namespace >/dev/null && reattach-to-user-namespace -l bash || bash"

# This tmux statusbar config was created by tmuxline.vim on Mon, 26 Aug 2019
# In vim run `:Tmuxline airline | TmuxlineSnapshot tmux.colors.conf`
set -g status-justify "left"
set -g status "on"
set -g status-left-style "none"
set -g message-command-style "fg=#ffffff,bg=#444444"
set -g status-right-style "none"
set -g pane-active-border-style "fg=#dfff00"
set -g status-style "none,bg=#202020"
set -g message-style "fg=#ffffff,bg=#444444"
set -g pane-border-style "fg=#888888"
set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-activity-style "none"
setw -g window-status-separator ""
setw -g window-status-style "none,fg=#9cffd3,bg=#202020"
set -g status-left "#[fg=#00005f,bg=#dfff00] #S #[fg=#dfff00,bg=#202020,nobold,nounderscore,noitalics]"
set -g status-right "#(command -v tmux-status.sh >/dev/null && tmux-status.sh) #[fg=#444444,bg=#202020,nobold,nounderscore,noitalics]#[fg=#ffffff,bg=#444444] %Y-%m-%d  %H:%M #[fg=#dfff00,bg=#444444,nobold,nounderscore,noitalics]#[fg=#00005f,bg=#dfff00] #h "
setw -g window-status-format "#[fg=#9cffd3,bg=#202020] #I #[fg=#9cffd3,bg=#202020] #W "
setw -g window-status-current-format "#[fg=#202020,bg=#444444,nobold,nounderscore,noitalics]#[fg=#ffffff,bg=#444444] #I #[fg=#ffffff,bg=#444444] #W #[fg=#444444,bg=#202020,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=colour234,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour255,bg=colour238] #I: #[fg=colour255,bg=colour238]#W #[fg=colour238,bg=colour234,nobold,nounderscore,noitalics]"

# Manual theme stuff
set -g status-interval 3
set -g window-style 'fg=colour250,bg=black'
set -g window-active-style 'fg=colour231,bg=colour233'


###
### Key bindings are after options since the if-shell below apparently creates a client session
### earlier than expects and some options weren't being set.... or something...
###

# Smart pane switching with awareness of vim splits
prevent_select_pane="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?(g?(view|n?vim?x?)(diff)?|fzf)$'"
bind -n C-h if-shell "$prevent_select_pane" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$prevent_select_pane" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$prevent_select_pane" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$prevent_select_pane" "send-keys C-l" "select-pane -R"

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
bind 'C-\' select-window -l

bind -r Up resize-pane -U 5
bind -r Down resize-pane -D 5
bind -r Left resize-pane -L 5
bind -r Right resize-pane -R 5

bind -r C-Up move-pane -s '{marked}' -v -b
bind -r C-Down move-pane -s '{marked}' -v
bind -r C-Left move-pane -s '{marked}' -h -b
bind -r C-Right move-pane -s '{marked}' -h

bind Space send-prefix

bind s split-window -vb -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'
bind S split-window -vbf -c '#{pane_current_path}'
bind V split-window -hf -c '#{pane_current_path}'
unbind %
unbind '"'

bind w choose-session
bind W switch-client -l
bind C-w choose-session "kill-session -t '%%'"

bind X confirm-before -p "kill-window #W? (y/n)" kill-window

bind r source-file ~/.tmux.conf \; display "tmux config reloaded!"

bind Escape copy-mode
bind p paste-buffer
bind -T copy-mode-vi 'Space' send -X begin-selection
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "which reattach-to-user-namespace >/dev/null && reattach-to-user-namespace pbcopy || xclip -i -selection clip"
bind C-y run "tmux save-buffer - | (which reattach-to-user-namespace >/dev/null && reattach-to-user-namespace pbcopy || xclip -i -selection clip)"

bind < swap-window -t -1
bind > swap-window -t +1

bind , command-prompt "rename-window '%%'"

bind ` show-messages

bind = run-shell "tmux lsw -F '#{window_active} #{window_layout}' | awk '$1 == 1 {print $2}' | xargs ~/.tmux/equalize-layout.js | xargs tmux select-layout"


###
### Tmux Plugin Manager
###

set -g @copycat_next 'N'
set -g @copycat_prev 'n'

set -g @copycat_hash_search 'C-g'
set -g @copycat_git_special 'C-q'

set -g @tpm_plugins "          \
  tmux-plugins/tpm             \
  tmux-plugins/tmux-resurrect  \
  Morantron/tmux-fingers       \
  tmux-plugins/tmux-copycat    \
"
run-shell ~/.tmux/plugins/tpm/tpm
