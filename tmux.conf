
# Better prefix
set -g prefix C-Space
unbind C-b

# Seems like a good thing...
set -g utf8 on
setw -g utf8 on

# For smart pane switchin with Vim, see bindings
set -g set-titles on

# Enable all the mouse support
setw -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on
set -g mouse-utf8 on

# Mouse wheel scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Things work better with this
setw -g xterm-keys on

# Better for Vim
set -sg escape-time 1

# Better indexing
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# Everyone's doing it...
setw -g aggressive-resize on

# Show running command in window tab
setw -g automatic-rename on

# Do it right
set -g default-terminal screen-256color

# More to scroll back to
set -g history-limit 10000

# Prevent C-d killing tmux
set-environment -g 'IGNOREEOF' 2

# Vim-style keys for copy-mode
set -g mode-keys vi

# Support copy/paste on Mac OS X
set -g default-command "which reattach-to-user-namespace >/dev/null && reattach-to-user-namespace -l bash || bash"

# This tmux statusbar config was created by tmuxline.vim
# on Tue, 07 Oct 2014
set -g status-left-length 32
set -g status-right-length 150
set -g status-interval 5
set -g status-bg "colour234"
set -g message-command-fg "colour255"
set -g status-justify "left"
set -g status-left-length "100"
set -g status "on"
set -g pane-active-border-fg colour39
set -g message-bg "colour238"
set -g status-right-length "100"
set -g status-right-attr "none"
set -g message-fg "colour255"
set -g message-command-bg "colour238"
set -g status-attr "none"
set -g status-utf8 "on"
set -g pane-border-fg "colour238"
set -g status-left-attr "none"
setw -g window-status-fg "colour85"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "colour234"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "colour190"
setw -g window-status-separator ""
setw -g window-status-bg "colour234"
set -g status-left "#[fg=colour17,bg=colour190] #S #[fg=colour190,bg=colour234,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour238,bg=colour234,nobold,nounderscore,noitalics]#[fg=colour255,bg=colour238] %Y-%m-%d  %H:%M #[fg=colour190,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour17,bg=colour190] #h "
setw -g window-status-format "#[fg=colour85,bg=colour234] #I: #[fg=colour85,bg=colour234]#W "
setw -g window-status-current-format "#[fg=colour234,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour255,bg=colour238] #I: #[fg=colour255,bg=colour238]#W #[fg=colour238,bg=colour234,nobold,nounderscore,noitalics]"


###
### Key bindings are after options since the if-shell below apparently creates a clientsession
### earlier than expects and some options weren't being set.... or something...
###

# Smart pane switching with awareness of vim splits
bind -n C-h if "expr '#{pane_title}' : 'Vim@.*'" 'send-keys C-h' 'select-pane -L'
bind -n C-j if "expr '#{pane_title}' : 'Vim@.*'" 'send-keys C-j' 'select-pane -D'
bind -n C-k if "expr '#{pane_title}' : 'Vim@.*'" 'send-keys C-k' 'select-pane -U'
bind -n C-l if "expr '#{pane_title}' : 'Vim@.*'" 'send-keys C-l' 'select-pane -R'

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

bind -r Up resize-pane -U
bind -r Down resize-pane -D
bind -r Left resize-pane -L
bind -r Right resize-pane -R

bind -r C-Up resize-pane -U 5
bind -r C-Down resize-pane -D 5
bind -r C-Left resize-pane -L 5
bind -r C-Right resize-pane -R 5

bind Space send-prefix

bind C-Space last-window

if-shell '[[ `tmux -V` == *1.9* ]]' "bind s split-window -v -c '#{pane_current_path}'" "bind s split-window -v"
if-shell '[[ `tmux -V` == *1.9* ]]' "bind v split-window -h -c '#{pane_current_path}'" "bind v split-window -h"
if-shell '[[ `tmux -V` == *1.9* ]]' "bind c new-window -c '#{pane_current_path}'" "bind c new-window"
unbind %
unbind '"'

bind w choose-session
bind C-w choose-session "kill-session -t '%%'"

bind r source-file ~/.tmux.conf

bind Escape copy-mode
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-pipe "which reattach-to-user-namespace >/dev/null && reattach-to-user-namespace pbcopy || xclip -i -selection clip"
bind -t vi-copy 'Space' halfpage-down
bind -t vi-copy 'Bspace' halfpage-up
bind C-y run "tmux save-buffer - | (which reattach-to-user-namespace >/dev/null && reattach-to-user-namespace pbcopy || xclip -i -selection clip)"

bind 1 run-shell 'tmuxinator macadamian'
bind 2 run-shell 'tmuxinator gerrit'
bind 3 run-shell 'tmuxinator rc'

bind < switch-client -p
bind > switch-client -n


###
### Tmux Plugin Manager
###

set -g @tpm_plugins "          \
  tmux-plugins/tpm             \
  tmux-plugins/tmux-resurrect  \
"
run-shell ~/.tmux/plugins/tpm/tpm
